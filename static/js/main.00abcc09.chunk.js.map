{"version":3,"sources":["UseFetchJobs.js","Job.js","SearchForm.js","JobsPagination.js","App.js","index.js"],"names":["BASE_URL","ACTIONS","MAKE_REGUEST","GET_DATA","ERROR","UPDATE_HAS_NEXT_PAGE","reducer","state","action","type","loading","Jobs","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","onParamChnage","param","atarget","target","prevParams","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00abcc09.chunk.js","sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst BASE_URL =\n  \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\n\nconst ACTIONS = {\n  MAKE_REGUEST: \"make_request\",\n  GET_DATA: \"get_data\",\n  ERROR: \"error\",\n  UPDATE_HAS_NEXT_PAGE:\"update_has_next_page\"\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REGUEST:\n      return { loading: true, Jobs: [] };\n    case ACTIONS.GET_DATA:\n      return { ...state, loading: false, jobs: action.payload.jobs };\n    case ACTIONS.ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: [],\n      };\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n        return {...state,hasNextPage:ACTIONS.payload.hasNextPage}  \n    default:\n      break;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\n\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source();\n    dispatch({ type: ACTIONS.MAKE_REGUEST });\n    axios\n      .get(BASE_URL, {\n        cancelToken: cancelToken1.token,\n        params: {\n          markdown: true,\n          page: page,\n          ...params,\n        },\n      })\n      .then((res) => {\n        dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } });\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\n      });\n\n      const cancelToken2 = axios.CancelToken.source();\n      axios\n      .get(BASE_URL, {\n        cancelToken: cancelToken2.token,\n        params: {\n          markdown: true,\n          page: page+1,\n          ...params,\n        },\n      })\n      .then((res) => {\n        dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0  } });\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\n      });\n    return () => {\n      cancelToken1.cancel();\n      cancelToken2.cancel();\n    };\n  }, [params, page]);\n\n  return state;\n}\n","import React, { useState } from \"react\";\nimport { Card, Badge, Button, Collapse } from \"react-bootstrap\";\nimport ReactMarkdown from \"react-markdown\";\n\nexport default function Job({ job }) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Card className=\"mb-3\">\n      <Card.Body>\n        <div className=\"d-flex justify-content-between \">\n          <div>\n            <Card.Title>\n              {job.title} -{\" \"}\n              <span className=\"text-muted font-weight-light\">\n                {job.company}\n              </span>\n            </Card.Title>\n            <Card.Subtitle className=\"text-muted mb-2\">\n              {new Date(job.created_at).toLocaleDateString()}\n            </Card.Subtitle>\n            <Badge variant=\"secondary\" className=\"mr-2\">\n              {job.type}\n            </Badge>\n            <Badge variant=\"secondary\">{job.location}</Badge>\n            <div style={{ wordBreak: \"break-all\" }}>\n              <ReactMarkdown source={job.how_to_apply} />\n            </div>\n          </div>\n          <img\n            className=\"d-none d-md-block\"\n            height=\"50\"\n            alt={job.company}\n            src={job.company_logo}\n          />\n        </div>\n        <Card.Text>\n          <Button\n            variant=\"primary\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? \"Hide Details\" : \"View Details\"}\n          </Button>\n        </Card.Text>\n        <Collapse in={open}>\n          <div className=\"mt-4\">\n            <ReactMarkdown source={job.description} />\n          </div>\n        </Collapse>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Form, Col } from \"react-bootstrap\";\n\nexport default function SearchForm({ params, onParamChange }) {\n    return (\n      <Form className=\"mb-4\">\n        <Form.Row className=\"align-items-end\">\n          <Form.Group as={Col}>\n            <Form.Label>Description</Form.Label>\n            <Form.Control onChange={onParamChange} value={params.description} name=\"description\" type=\"text\" />\n          </Form.Group>\n          <Form.Group as={Col}>\n            <Form.Label>Location</Form.Label>\n            <Form.Control onChange={onParamChange} value={params.location} name=\"location\" type=\"text\" />\n          </Form.Group>\n          <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\n            <Form.Check onChange={onParamChange} value={params.full_time} name=\"full_time\" id=\"full-time\" label=\"Only Full Time\" type=\"checkbox\" className=\"mb-2\" />\n          </Form.Group>\n        </Form.Row>\n      </Form>\n    )\n  }\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\n\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\n  function adjustPage(amount) {\n    setPage((prevPage) => prevPage + amount);\n  }\n  return (\n    <Pagination>\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\n      {page !== 1 && (\n        <Pagination.Item onClick={() => adjustPage(1)}>1 </Pagination.Item>\n      )}\n      {page > 2 && <Pagination.Ellipsis />}\n      {page > 2 && (\n        <Pagination.Item onClick={() => adjustPage(-1)}>\n          {page - 1}\n        </Pagination.Item>\n      )}\n      <Pagination.Item active>{page}</Pagination.Item>\n      {hasNextPage && (\n        <Pagination.Item onClick={() => adjustPage(1)}>\n          {page + 1}\n        </Pagination.Item>\n      )}\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\n    </Pagination>\n  );\n}\n","import React, { useState } from \"react\";\nimport useFetchJobs from \"./UseFetchJobs.js\";\nimport { Container } from \"react-bootstrap\";\n\nimport Job from \"./Job.js\";\nimport SearchForm from \"./SearchForm.js\";\nimport JobsPagination from \"./JobsPagination.js\";\n\nfunction Sample() {\n  return null;\n}\n\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n\n  function handleChangeParam(e) {\n    const param = e.atarget.value;\n    const value = e.target.value;\n    setPage(1);\n    setParams((prevParams) => {\n      return { ...prevParams, [param]: value };\n    });\n  }\n  return (\n    <Container className=\"my-4\">\n      {/* <Sample />   */}\n      <h1 className=\"mb-4\">GitHub Jobs</h1>\n      <SearchForm params={params} onParamChnage={handleChangeParam} />\n      <JobsPagination page={page} setPage={setPage} hasNextPage={true} />\n      {loading && <h1>Loading... </h1>}\n      {error && <h1>Error. Try Refreshing.</h1>}\n      {jobs && jobs.map((job) => <Job key={job.id} job={job} />)}\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}